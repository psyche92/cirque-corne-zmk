/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#include <dt-bindings/zmk/pointing.h>
/ {
    combos {
        compatible = "zmk,combos";

        a-za {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 7>;
        };

        a-zb {
            bindings = <&kp ESCAPE>;
            key-positions = <3 2>;
        };

        a-zc {
            bindings = <&kp ENTER>;
            key-positions = <19 20>;
        };

        a-ad {
            bindings = <&kp LEFT_WIN>;
            key-positions = <36 37>;
        };

        a-ze {
            bindings = <&kp DEL>;
            key-positions = <8 9>;
        };

        a-zk {
            bindings = <&kp B>;
            key-positions = <30 31>;
        };

        a-zew {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <9 10>;
        };

        a-zklw {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <10 11>;
        };

        a-zklx {
            bindings = <&kp MINUS>;
            key-positions = <6 7>;
        };

        z-dkf {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <6 18>;
        };

        z-dkfj {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <18 30>;
        };

        z-dkfjgd {
            bindings = <&kp C_BRI_UP>;
            key-positions = <7 19>;
        };

        z-dkfjgfg {
            bindings = <&kp C_BRIGHTNESS_DEC>;
            key-positions = <19 31>;
        };z-kdjfk {
         bindings = <&kp LC(TAB)>;
         key-positions = <12 13>;};z-dsflkl {
         bindings = <&kp LS(LC(TAB))>;
         key-positions = <13 14>;};s-sdfkfl {
         bindings = <&kp LC(W)>;
         key-positions = <1 2>;};z-sdflkfkfg {
         bindings = <&kp LC(T)>;
         key-positions = <4 5>;};
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTER|
            // | LCTRL|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHFT|
            //                    |LCTRL| LALT| SP |   | SPACE | RSE  | RALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R         &kp T    &kp Y      &kp U          &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D      &kp F         &kp G    &kp H      &kp J          &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V         &kp B    &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &kp LEFT_ALT  &mo 1    &kp SPACE  &kp RIGHT_ALT  &mo 2
>;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp UP_ARROW  &kp UP_ARROW  &msc SCRL_DOWN  &msc SCRL_UP     &kp N7        &kp N8        &kp N9        &kp A           &kp EXCLAMATION  &kp BSPC
&kp CAPS   &kp LEFT         &kp LEFT      &kp DOWN      &kp RIGHT       &kp PAGE_UP      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &mkp MB1        &mmv MOVE_UP     &mkp MB2
&kp LSHFT  &trans           &trans        &trans        &trans          &kp PAGE_DOWN    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_RIGHT
                                          &kp LGUI      &trans          &kp SPACE        &kp N0        &kp DOT       &kp RALT
>;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp F2   &kp F4                &kp UP_ARROW           &kp UP_ARROW  &kp RPAR      &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp F7   &kp LEFT              &kp LEFT               &kp DOWN      &kp RIGHT     &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp F10  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERCENT   &kp QUESTION  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET  &trans                &kp RALT
>;
        };
    };
};
